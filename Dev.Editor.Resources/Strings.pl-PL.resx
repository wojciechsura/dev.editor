<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ribbon.Home.File.New" xml:space="preserve">
    <value>Nowy</value>
  </data>
  <data name="Ribbon.Home.File.Open" xml:space="preserve">
    <value>Otwórz</value>
  </data>
  <data name="Ribbon.Home.File.Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="Ribbon.Home.File.SaveAs" xml:space="preserve">
    <value>Zapisz jako</value>
  </data>
  <data name="Ribbon.Home.Group.Edit" xml:space="preserve">
    <value>Edycja</value>
  </data>
  <data name="Ribbon.Home.Group.File" xml:space="preserve">
    <value>Plik</value>
  </data>
  <data name="Ribbon.Tab.Home" xml:space="preserve">
    <value>Narzędzia główne</value>
  </data>
  <data name="Ribbon.Home.Edit.Copy" xml:space="preserve">
    <value>Kopiuj</value>
  </data>
  <data name="Ribbon.Home.Edit.Cut" xml:space="preserve">
    <value>Wytnij</value>
  </data>
  <data name="Ribbon.Home.Edit.Paste" xml:space="preserve">
    <value>Wklej</value>
  </data>
  <data name="Ribbon.Home.Edit.Redo" xml:space="preserve">
    <value>Ponów</value>
  </data>
  <data name="Ribbon.Home.Edit.Undo" xml:space="preserve">
    <value>Cofnij</value>
  </data>
  <data name="BlankDocName" xml:space="preserve">
    <value>Dokument</value>
  </data>
  <data name="Ribbon.Home.Group.Search" xml:space="preserve">
    <value>Szukanie</value>
  </data>
  <data name="Ribbon.Home.Search.Search" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="Ribbon.Home.Search.Replace" xml:space="preserve">
    <value>Zamień</value>
  </data>
  <data name="DefaultDialogTitle" xml:space="preserve">
    <value>Dev.Editor</value>
  </data>
  <data name="DefaultFilter" xml:space="preserve">
    <value>Wszystkie pliki (*.*)|*.*</value>
  </data>
  <data name="SearchWindow.Search" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="SearchWindow.SearchedText" xml:space="preserve">
    <value>Szukany tekst</value>
  </data>
  <data name="SearchWindow.CaseSensitive" xml:space="preserve">
    <value>Uwzględniaj wielkość liter</value>
  </data>
  <data name="SearchWindow.Close" xml:space="preserve">
    <value>Zamknij</value>
  </data>
  <data name="SearchWindow.FindNext" xml:space="preserve">
    <value>Znajdź następny</value>
  </data>
  <data name="SearchWindow.OnlyFullWords" xml:space="preserve">
    <value>Tylko pełne wyrażenia</value>
  </data>
  <data name="SearchWindow.Replace" xml:space="preserve">
    <value>Zamień</value>
  </data>
  <data name="SearchWindow.ReplaceWith" xml:space="preserve">
    <value>Zamień na</value>
  </data>
  <data name="SearchWindow.SearchMode" xml:space="preserve">
    <value>Tryb szukania</value>
  </data>
  <data name="SearchWindow.SearchModeExtended" xml:space="preserve">
    <value>Rozszerzony (\n, \t itp.)</value>
  </data>
  <data name="SearchWindow.SearchModeNormal" xml:space="preserve">
    <value>Normalny</value>
  </data>
  <data name="SearchWindow.SearchModeRegex" xml:space="preserve">
    <value>Wyrażenia regularne</value>
  </data>
  <data name="SearchWindow.SearchOptions" xml:space="preserve">
    <value>Opcje szukania</value>
  </data>
  <data name="SearchWindow.Title" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="SearchWindow.ReplaceAll" xml:space="preserve">
    <value>Zamień wszystkie</value>
  </data>
  <data name="SearchWindow.SearchTab" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="SearchWindow.ReplaceTab" xml:space="preserve">
    <value>Zamień</value>
  </data>
  <data name="SearchWindow.SearchBackwards" xml:space="preserve">
    <value>Szukaj wstecz</value>
  </data>
  <data name="Ribbon.Home.Search.FindNext" xml:space="preserve">
    <value>Znajdź następny</value>
  </data>
  <data name="BlankDocumentName" xml:space="preserve">
    <value>Dokument</value>
  </data>
  <data name="Message.CannotOpenFile" xml:space="preserve">
    <value>Nie mogę otworzyć pliku {0}. Błąd: {1}</value>
  </data>
  <data name="Message.CannotSaveFile" xml:space="preserve">
    <value>Nie mogę zapisać pliku {0}. Błąd: {1}</value>
  </data>
  <data name="Message.FileNotSaved" xml:space="preserve">
    <value>Czy chcesz zapisać {0} przed zamknięciem?</value>
  </data>
  <data name="Search.SearchTitle" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="Search.ReplaceTitle" xml:space="preserve">
    <value>Zamień</value>
  </data>
  <data name="DefaultMessageboxTitle" xml:space="preserve">
    <value>Dev.Editor</value>
  </data>
  <data name="Message.InvalidSearchPattern" xml:space="preserve">
    <value>Nieprawidłowy ciąg do wyszukania!</value>
  </data>
  <data name="Message.NoMorePatternsFound" xml:space="preserve">
    <value>Nie znaleziono wystąpień wprowadzonego ciągu.</value>
  </data>
  <data name="SearchWindow.InSelection" xml:space="preserve">
    <value>W zaznaczeniu</value>
  </data>
  <data name="Ribbon.Tab.View" xml:space="preserve">
    <value>Widok</value>
  </data>
  <data name="Ribbon.View.Group.Editor" xml:space="preserve">
    <value>Edytor</value>
  </data>
  <data name="Ribbon.View.Editor.WordWrap" xml:space="preserve">
    <value>Zawijaj wiersze</value>
  </data>
  <data name="Ribbon.View.Editor.ShowLineNumbers" xml:space="preserve">
    <value>Numery wierszy</value>
  </data>
  <data name="Message.CannotSaveConfiguration" xml:space="preserve">
    <value>Nie udało się zapisać konfiguracji. Czy na pewno chcesz wyjść?</value>
  </data>
  <data name="Message.CannotRestoreFile" xml:space="preserve">
    <value>Nie mogę odtworzyć pliku {0}. Błąd: {1}</value>
  </data>
  <data name="Ribbon.View.View.SyntaxHighlighting" xml:space="preserve">
    <value>Kolorowanie składni</value>
  </data>
  <data name="SyntaxHighlighting.None" xml:space="preserve">
    <value>(brak)</value>
  </data>
  <data name="Ribbon.Tab.Lines" xml:space="preserve">
    <value>Linie</value>
  </data>
  <data name="Ribbon.Lines.Group.Ordering" xml:space="preserve">
    <value>Kolejność</value>
  </data>
  <data name="Ribbon.Lines.Ordering.SortAscending" xml:space="preserve">
    <value>Sortuj rosnąco</value>
  </data>
  <data name="Ribbon.Lines.Ordering.SortDescending" xml:space="preserve">
    <value>Sortuj malejąco</value>
  </data>
  <data name="Ribbon.Home.Group.Navigation" xml:space="preserve">
    <value>Nawigacja</value>
  </data>
  <data name="Ribbon.Home.Navigation.Navigate" xml:space="preserve">
    <value>Nawigacja</value>
  </data>
  <data name="NavigationPopup.Header" xml:space="preserve">
    <value>Nawigacja</value>
  </data>
  <data name="Ribbon.Lines.Group.Cleanup" xml:space="preserve">
    <value>Czyszczenie</value>
  </data>
  <data name="Ribbon.Lines.Cleanup.RemoveEmptyLines" xml:space="preserve">
    <value>Usuń puste linie</value>
  </data>
  <data name="Ribbon.Lines.Cleanup.RemoveWhitespaceLines" xml:space="preserve">
    <value>Usuń linie z białymi znakami</value>
  </data>
  <data name="Tool.Explorer.Title" xml:space="preserve">
    <value>Pliki</value>
  </data>
  <data name="Ribbon.Home.File.NewHex" xml:space="preserve">
    <value>Nowy hexedytor</value>
  </data>
  <data name="Ribbon.Home.File.OpenHex" xml:space="preserve">
    <value>Otwórz w hexedytorze</value>
  </data>
  <data name="Configuration.Behavior" xml:space="preserve">
    <value>Zachowanie</value>
  </data>
  <data name="Configuration.Title" xml:space="preserve">
    <value>Konfiguracja</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Konfiguracja</value>
  </data>
  <data name="Configuration.Behavior.ClosingBehavior" xml:space="preserve">
    <value>Sposób zamykania</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="Configuration.Behavior.ClosingBehavior.Comment" xml:space="preserve">
    <value>Wybierz, jak aplikacja powinna zachowywać się podczas zamykania:</value>
  </data>
  <data name="Configuration.Behavior.ClosingBehavior.Standard" xml:space="preserve">
    <value>Standardowo</value>
  </data>
  <data name="Configuration.Behavior.ClosingBehavior.Fluent" xml:space="preserve">
    <value>Płynnie</value>
  </data>
  <data name="Configuration.Behavior.ClosingBehavior.Fluent.Comment" xml:space="preserve">
    <value>Dev.Editor zapisze wszystkie dokumenty i odtworzy je po ponownym uruchomieniu (łącznie z niezapisanymi zmianami)</value>
  </data>
  <data name="Configuration.Behavior.ClosingBehavior.Standard.Comment" xml:space="preserve">
    <value>Dev.Editor zamknie wszystkie dokumenty podczas kończenia pracy i uruchomi się z nowym, pustym dokumentem</value>
  </data>
  <data name="Ribbon.View.Group.Interface" xml:space="preserve">
    <value>Interfejs</value>
  </data>
  <data name="Ribbon.View.Interface.SidePanel" xml:space="preserve">
    <value>Panel boczny</value>
  </data>
  <data name="Ribbon.View.SidePanelPlacement.Hidden" xml:space="preserve">
    <value>Ukryj</value>
  </data>
  <data name="Ribbon.View.SidePanelPlacement.Left" xml:space="preserve">
    <value>Lewo</value>
  </data>
  <data name="Ribbon.View.SidePanelPlacement.Right" xml:space="preserve">
    <value>Prawo</value>
  </data>
  <data name="Tool.BinDefinitions.Title" xml:space="preserve">
    <value>Definicje binarne</value>
  </data>
  <data name="Dialog.BinDefinition.Title" xml:space="preserve">
    <value>Definicja binarna</value>
  </data>
  <data name="Dialog.Name.Name" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="NewBinaryDefinitionContents" xml:space="preserve">
    <value>// To jest definicja pliku binarnego {0} Dev.Editora.
</value>
  </data>
  <data name="Message.CannotAddBinDefinition" xml:space="preserve">
    <value>Nie mogę dodać definicji binarnej, błąd: {0}</value>
  </data>
  <data name="Message.BinDefinitionDeleteConfirmation" xml:space="preserve">
    <value>Czy jesteś pewien, że chcesz usunąć definicję binarną {0}?</value>
  </data>
  <data name="BinDefinitionSample" xml:space="preserve">
    <value>// Poniższa, przykładowa definicja binarna przetwarza plik bitmapy (.BMP)
// i dostarcza informacje zdekodowane z jej nagłówka.

struct BmpHeader 
{
    char[2] descriptor;
    int bmpSizeInBytes;
    short reserved1;
    short reserved2;
    int dataOffset;
};

enum DibHeaderType : byte 
{
 BITMAPCOREHEADER = 1u,
 OS21XBITMAPHEADER = 2u,
 OS22XBITMAPHEADER_V1 = 3u,
 OS22XBITMAPHEADER_V2 = 4u,
 BITMAPINFOHEADER = 5u,
 BITMAPV2INFOHEADER = 6u,
 BITMAPV3INFOHEADER = 7u,
 BITMAPV4HEADER = 8u,
 BITMAPV5HEADER = 9u
};

enum BitmapCompressionMethod : int
{
 BI_RGB = 0,
 BI_RLE8 = 1,
 BI_RLE4 = 2,
 BI_BITFIELDS = 3,
 BI_JPEG = 4,
 BI_PNG = 5,
 BI_ALPHABITFIELDS = 6,
 BI_CMYK = 11,
 BI_CMYKRLE8 = 12,
 BI_CMYKRLE4 = 13
};

enum HalftoningAlgorithm : short
{
 None = 0,
 ErrorDiffusion = 1,
 PANDA = 2,
 SuperCircle = 3
};

struct DibHeader
{
 int headerSize;
 
 if (headerSize == 12)
 {
  show enum DibHeaderType.BITMAPCOREHEADER as headerType;
  ushort bitmapWidth;
  ushort bitmapHeight;
  short colorPlaneCount;
  short bitsPerPixel;
 }
 elseif (headerSize == 64)
 {
  show enum DibHeaderType.OS22XBITMAPHEADER_V1 as headerType;
  int bitmapWidth;
  int bitmapHeight;
  short colorPlaneCount;
  short bitsPerPixel;
  BitmapCompressionMethod compressionMethod;
  int imageSize;
  int horizontalResolution;
  int verticalResolution;
  int colorsInPallette;
  int importantColorCount;
  
  short resolutionUnit;
  short padding;
  short fillDirection;
  HalftoningAlgorithm halftoningAlgorithm;
  int halftoningParameter1;
  int halftoningParameter2;
  int colorEncoding;
  int appDefinedIdentifier;  
 }
 elseif (headerSize == 16)
 {
  show enum DibHeaderType.OS22XBITMAPHEADER_V2 as headerType;
  int bitmapWidth;
  int bitmapHeight;
  short colorPlaneCount;
  short bitsPerPixel;
  BitmapCompressionMethod compressionMethod;
 }
 elseif (headerSize == 40)
 {
  show enum DibHeaderType.BITMAPINFOHEADER as headerType;
  int bitmapWidth;
  int bitmapHeight;
  short colorPlaneCount;
  short bitsPerPixel;
  BitmapCompressionMethod compressionMethod;
  int imageSize;
  int horizontalResolution;
  int verticalResolution;
  int colorsInPallette;
  int importantColorCount;
  
 }
 elseif (headerSize == 52)
 {
     show enum DibHeaderType.BITMAPV2INFOHEADER as headerType;     
 }
 elseif (headerSize == 56)
 {
     show enum DibHeaderType.BITMAPV3INFOHEADER as headerType; 
 }
 elseif (headerSize == 108)
 { 
  show enum DibHeaderType.BITMAPV4HEADER as headerType;
 }
 elseif (headerSize == 124)
 {
     show enum DibHeaderType.BITMAPV5HEADER as headerType;
 }
};

BmpHeader bmpHeader;
DibHeader dibHeader;

show (dibHeader.bitmapWidth * dibHeader.bitmapHeight * dibHeader.bitsPerPixel) / 8 as bitmapByteSize; </value>
  </data>
  <data name="OpenBinaryFile.Title" xml:space="preserve">
    <value>Otwórz plik binarny {0}</value>
  </data>
  <data name="Ribbon.Home.File.OpenBin" xml:space="preserve">
    <value>Otwórz plik binarny</value>
  </data>
  <data name="Message.UseSidePanelToOpenBinFile" xml:space="preserve">
    <value>Kliknij podwójnie definicję binarną by otworzyć plik binarny i przeanalizować go.</value>
  </data>
  <data name="Message.SyntaxError.StructureAlreadyExists" xml:space="preserve">
    <value>Struktura o nazwie {0} już istnieje!</value>
  </data>
  <data name="Message.SyntaxError.InvalidIntegerValue" xml:space="preserve">
    <value>Nieprawidłowa liczba całkowita: {0}!</value>
  </data>
  <data name="Message.SyntaxError.InvalidFloatNumber" xml:space="preserve">
    <value>Nieprawidłowa liczba zmiennoprzecinkowa: {0} !</value>
  </data>
  <data name="Message.SyntaxError.FieldAlreadyExists" xml:space="preserve">
    <value>Pole o nazwie {0} już istnieje!</value>
  </data>
  <data name="Message.SyntaxError.CannotFindTypeName" xml:space="preserve">
    <value>Nie można znaleźć typu {0} !</value>
  </data>
  <data name="Message.SyntaxError.FailedToProcessDefinition" xml:space="preserve">
    <value>Nie udało się przetworzyć definicji!</value>
  </data>
  <data name="Message.SyntaxError.SyntaxError" xml:space="preserve">
    <value>Błąd składniowy w definicji: {0}</value>
  </data>
  <data name="Message.AnalysisError.CannotAssign" xml:space="preserve">
    <value>Nie można wykonać przypisania do {0}. Powód:
{1}</value>
  </data>
  <data name="Message.AnalysisError.UnexpectedEndOfStream" xml:space="preserve">
    <value>Niespodziewany koniec pliku!</value>
  </data>
  <data name="Message.AnalysisError.FailedToReadField" xml:space="preserve">
    <value>Nie udało się wczytać pola {0}. Powód:
{1}</value>
  </data>
  <data name="Message.AnalysisError.CannotShow" xml:space="preserve">
    <value>Nie można dodać obliczonego pola {0}. Powód:
{1}</value>
  </data>
  <data name="Message.AnalysisError.FailedToSkip" xml:space="preserve">
    <value>Nie udało się pominąć bajtów. Powód:
{0}</value>
  </data>
  <data name="Message.AnalysisError.FailedToReadStructArray" xml:space="preserve">
    <value>Nie udało się wczytać pola tablicy struktur {0}. Powód:
{1}</value>
  </data>
  <data name="Message.AnalysisError.FailedToReadStruct" xml:space="preserve">
    <value>Nie udało się wczytać pola struktury {0}. Powód:
{1}</value>
  </data>
  <data name="Message.EvalError.CannotFindIdentifier" xml:space="preserve">
    <value>Nie mogę znaleźć identyfikatora {0} w bieżącym zakresie.</value>
  </data>
  <data name="Message.EvalError.CannotAccessMember" xml:space="preserve">
    <value>Nie można dostać się do składowej {0} pola {1}.</value>
  </data>
  <data name="Message.EvalError.MemberIsNotValue" xml:space="preserve">
    <value>Identyfikator {0} nie wskazuje na pole typu wartościowego.</value>
  </data>
  <data name="Message.EvalError.FailedToEvalBinaryOperator" xml:space="preserve">
    <value>Nie udało się obliczyć binarnego operatora. Powód:
{0}</value>
  </data>
  <data name="Message.EvalError.FailedToEvalExpression" xml:space="preserve">
    <value>Nie udało się obliczyć wyrażenia. Powód:
{0}</value>
  </data>
  <data name="BottomTool.Messages.Title" xml:space="preserve">
    <value>Komunikaty</value>
  </data>
  <data name="Ribbon.View.BottomPanelVisibility.Visible" xml:space="preserve">
    <value>Pokaż</value>
  </data>
  <data name="Ribbon.View.BottomPanelVisibility.Hidden" xml:space="preserve">
    <value>Ukryj</value>
  </data>
  <data name="Ribbon.View.Interface.BottomPanel" xml:space="preserve">
    <value>Panel dolny</value>
  </data>
  <data name="Messages.Severity" xml:space="preserve">
    <value>Ważność</value>
  </data>
  <data name="Messages.Message" xml:space="preserve">
    <value>Wiadomość</value>
  </data>
  <data name="Messages.File" xml:space="preserve">
    <value>Plik</value>
  </data>
  <data name="Messages.Row" xml:space="preserve">
    <value>Wiersz</value>
  </data>
  <data name="Messages.Column" xml:space="preserve">
    <value>Kolumna</value>
  </data>
  <data name="Messages.Code" xml:space="preserve">
    <value>Kod</value>
  </data>
  <data name="Message.CannotOpenBinFile" xml:space="preserve">
    <value>Nie mogę otworzyć pliku binarnego. Szczegóły w oknie wiadomości.</value>
  </data>
  <data name="Message.SyntaxError.InvalidUnsignedIntegerValue" xml:space="preserve">
    <value>Nieprawidłowa liczba całkowita bez znaku: {0}!</value>
  </data>
  <data name="Message.SyntaxError.InvalidSignedEnumItem" xml:space="preserve">
    <value>Typ wyliczeniowy ze znakiem powinien zawierać tylko wartości ze znakiem!</value>
  </data>
  <data name="Message.SyntaxError.InvalidUnsignedEnumItem" xml:space="preserve">
    <value>Typ wyliczeniowy bez znaku powinien zawierać tylko wartości bez znaku (z sufiksem "u")!</value>
  </data>
  <data name="Message.SyntaxError.EnumItemValueDuplicated" xml:space="preserve">
    <value>Element typu wyliczeniowego o wartości {0} już istnieje!</value>
  </data>
  <data name="Message.AnalysisError.InvalidIfCondition" xml:space="preserve">
    <value>Wyrażenie warunkowe musi obliczyć się do wartości typu bool!</value>
  </data>
  <data name="Ribbon.ContextGroup.Xml" xml:space="preserve">
    <value>XML</value>
  </data>
  <data name="Ribbon.Tab.XmlTools" xml:space="preserve">
    <value>Narzędzia XML</value>
  </data>
  <data name="Ribbon.XmlTools.Group.Formatting" xml:space="preserve">
    <value>Formatowanie</value>
  </data>
  <data name="Ribbon.XmlTools.Formatting.Format" xml:space="preserve">
    <value>Formatuj XML</value>
  </data>
  <data name="Message.CannotFormatInvalidXml" xml:space="preserve">
    <value>Nie mogę sformatować - XML jest nieprawidłowy.</value>
  </data>
  <data name="TextEditor.ContextMenu.Copy" xml:space="preserve">
    <value>Kopiuj</value>
  </data>
  <data name="TextEditor.ContextMenu.Cut" xml:space="preserve">
    <value>Wytnij</value>
  </data>
  <data name="TextEditor.ContextMenu.Paste" xml:space="preserve">
    <value>Wklej</value>
  </data>
  <data name="Message.ReplacedOccurrences" xml:space="preserve">
    <value>Zamieniono wystąpień: {0}.</value>
  </data>
  <data name="Message.SearchReachedBeginning" xml:space="preserve">
    <value>Wyszukiwanie osiągnęło początek pliku. Czy chcesz kontynuować od końca?</value>
  </data>
  <data name="Message.SearchReachedEnd" xml:space="preserve">
    <value>Wyszukiwanie osiągnęło koniec pliku. Czy chcesz kontynuować od początku?</value>
  </data>
  <data name="Message.EvalError.EnumDoesNotContainMember" xml:space="preserve">
    <value>Typ wyliczeniowy {0} nie zawiera składowej {1}.</value>
  </data>
  <data name="Message.SyntaxError.IntegerValueOutsideRange" xml:space="preserve">
    <value>Składowa typu wyliczeniowego {0} ma wartość ({1}) spoza zakresu typu liczbowego {2}!</value>
  </data>
  <data name="Ribbon.Tab.Text" xml:space="preserve">
    <value>Tekst</value>
  </data>
  <data name="Ribbon.Text.Convert.Case" xml:space="preserve">
    <value>Wielkość liter</value>
  </data>
  <data name="Ribbon.Text.Convert.Case.Lowercase" xml:space="preserve">
    <value>Małe litery</value>
  </data>
  <data name="Ribbon.Text.Convert.Case.Uppercase" xml:space="preserve">
    <value>Wielkie litery</value>
  </data>
  <data name="Ribbon.Text.Convert.Case.Naming" xml:space="preserve">
    <value>Jak w nazwach</value>
  </data>
  <data name="Ribbon.Text.Convert.Case.Sentence" xml:space="preserve">
    <value>Jak w zdaniu</value>
  </data>
  <data name="Ribbon.Text.Convert.Case.Invert" xml:space="preserve">
    <value>Odwróć</value>
  </data>
  <data name="SearchWindow.ReplaceOptions" xml:space="preserve">
    <value>Opcje zamiany</value>
  </data>
  <data name="SearchWindow.ShowSummary" xml:space="preserve">
    <value>Pokaż podsumowanie</value>
  </data>
  <data name="NameDialog.Title" xml:space="preserve">
    <value>Wprowadź nazwę</value>
  </data>
  <data name="NameDialog.GroupBoxHeader" xml:space="preserve">
    <value>Wprowadź nazwę</value>
  </data>
  <data name="NameDialog.Label" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="Dialog.StoredSearch.Title" xml:space="preserve">
    <value>Zapisane wyszukiwanie</value>
  </data>
  <data name="Message.StoredSearchDeleteConfirmation" xml:space="preserve">
    <value>Czy na pewno usunąć zapisane wyszukiwanie "{0}"?</value>
  </data>
  <data name="Ribbon.Text.Convert" xml:space="preserve">
    <value>Konwersja</value>
  </data>
  <data name="Ribbon.Text.Convert.Base64.FromBase64" xml:space="preserve">
    <value>Dekoduj Base64</value>
  </data>
  <data name="Ribbon.Text.Convert.Base64.ToBase64" xml:space="preserve">
    <value>Zakoduj Base64</value>
  </data>
  <data name="Message.InvalidBase64String" xml:space="preserve">
    <value>Nieprawidłowy ciąg Base64!</value>
  </data>
  <data name="Ribbon.Text.Convert.Base64" xml:space="preserve">
    <value>Base64</value>
  </data>
  <data name="Tool.Explorer.Folders.OpenInExplorer" xml:space="preserve">
    <value>Otwórz w Eksploratorze Windows</value>
  </data>
  <data name="Tool.Explorer.Files.ShowInExplorer" xml:space="preserve">
    <value>Pokaż w Eksploratorze Windows</value>
  </data>
  <data name="SystemIntegration.OpenInDevEditor" xml:space="preserve">
    <value>Edytuj w Dev.Editor</value>
  </data>
  <data name="Configuration.System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="Configuration.System.IntegrationHeader" xml:space="preserve">
    <value>Integracja z systemowym menu kontekstowym</value>
  </data>
  <data name="Configuration.System.IntegrationState" xml:space="preserve">
    <value>Stan integracji</value>
  </data>
  <data name="Configuration.System.Integration.Disabled" xml:space="preserve">
    <value>Integracja jest wyłączona</value>
  </data>
  <data name="Configuration.System.Integration.Enabled" xml:space="preserve">
    <value>Integracja jest włączona</value>
  </data>
  <data name="Configuration.System.Integration.Disable" xml:space="preserve">
    <value>Wyłącz integrację</value>
  </data>
  <data name="Configuration.System.Integration.Enable" xml:space="preserve">
    <value>Włącz integrację</value>
  </data>
  <data name="Filter.Xslt" xml:space="preserve">
    <value>Arkusze XSLT (*.xsl)|*.xsl</value>
  </data>
  <data name="Message.CannotTransformXslt" xml:space="preserve">
    <value>Nie udało się przekonwertować XSL przy pomocy XSLT. Szczegóły w oknie wiadomości.</value>
  </data>
  <data name="Ribbon.XmlTools.Group.Transform" xml:space="preserve">
    <value>Przekształcanie</value>
  </data>
  <data name="Ribbon.XmlTools.Transform.XSLT" xml:space="preserve">
    <value>Transformacja XSLT</value>
  </data>
  <data name="Command.SetHighlighting" xml:space="preserve">
    <value>Kolorowanie składni {0}</value>
  </data>
  <data name="Ribbon.ContentGroup.Markdown" xml:space="preserve">
    <value>Markdown</value>
  </data>
  <data name="Ribbon.Markdown.Headers.H1" xml:space="preserve">
    <value>Header 1</value>
  </data>
  <data name="Ribbon.Markdown.Headers" xml:space="preserve">
    <value>Nagłówki</value>
  </data>
  <data name="Ribbon.Tab.MarkdownTools" xml:space="preserve">
    <value>Narzędzia Markdown</value>
  </data>
  <data name="Ribbon.Markdown.Headers.H2" xml:space="preserve">
    <value>Header 2</value>
  </data>
  <data name="Ribbon.Markdown.Headers.H3" xml:space="preserve">
    <value>Header 3</value>
  </data>
  <data name="Ribbon.Markdown.Headers.H4" xml:space="preserve">
    <value>Header 4</value>
  </data>
  <data name="Ribbon.Markdown.Headers.H5" xml:space="preserve">
    <value>Header 5</value>
  </data>
  <data name="Ribbon.Markdown.Headers.H6" xml:space="preserve">
    <value>Header 6</value>
  </data>
  <data name="Command.ToggleWordWrap" xml:space="preserve">
    <value>Przełącz zawijanie wierszy</value>
  </data>
  <data name="Command.ToggleLineNumbers" xml:space="preserve">
    <value>Przełącz numerowanie wierszy</value>
  </data>
  <data name="Ribbon.Markdown.Blocks" xml:space="preserve">
    <value>Bloki</value>
  </data>
  <data name="Ribbon.Markdown.Blocks.Blockquote" xml:space="preserve">
    <value>Cytat</value>
  </data>
  <data name="Ribbon.Markdown.Blocks.Code" xml:space="preserve">
    <value>Kod źródłowy</value>
  </data>
  <data name="Ribbon.Markdown.Inline.Code" xml:space="preserve">
    <value>Kod źródłowy</value>
  </data>
  <data name="Ribbon.Markdown.Inline" xml:space="preserve">
    <value>Formatowanie</value>
  </data>
  <data name="Ribbon.Markdown.Inline.Emphasis" xml:space="preserve">
    <value>Wyróżnienie</value>
  </data>
  <data name="Ribbon.Markdown.Inline.Strong" xml:space="preserve">
    <value>Wzmocnienie</value>
  </data>
  <data name="Ribbon.Markdown.Blocks.OrderedList" xml:space="preserve">
    <value>Lista numerowana</value>
  </data>
  <data name="Ribbon.Markdown.Blocks.UnorderedList" xml:space="preserve">
    <value>Lista wypunktowana</value>
  </data>
  <data name="Ribbon.Markdown.Insert" xml:space="preserve">
    <value>Wstaw</value>
  </data>
  <data name="Ribbon.Markdown.Insert.Hr" xml:space="preserve">
    <value>Linia pozioma</value>
  </data>
  <data name="Ribbon.Markdown.Insert.Link" xml:space="preserve">
    <value>Łącze</value>
  </data>
  <data name="Ribbon.Markdown.Insert.Picture" xml:space="preserve">
    <value>Obraz</value>
  </data>
  <data name="Message.DocumentDeleted" xml:space="preserve">
    <value>Plik {0} został usunięty. Czy chcesz go zachować w edytorze?</value>
  </data>
  <data name="Message.DocumentModifiedOutsideEditor" xml:space="preserve">
    <value>Plik {0} został zmodyfikowany poza edytorem. Czy chcesz wczytać go ponownie?</value>
  </data>
  <data name="TextEditor.Footer.Split" xml:space="preserve">
    <value>PODZIEL</value>
  </data>
  <data name="Ribbon.View.Interface.ShowSecondaryDocumentTab" xml:space="preserve">
    <value>Drugi widok</value>
  </data>
  <data name="DocumentHeader.ContextMenu.Close" xml:space="preserve">
    <value>Zamknij</value>
  </data>
  <data name="DocumentHeader.ContextMenu.CloseAll" xml:space="preserve">
    <value>Zamknij wszystkie</value>
  </data>
  <data name="DocumentHeader.ContextMenu.CloseAllButPinned" xml:space="preserve">
    <value>Zamknij wszystkie poza przypiętymi</value>
  </data>
  <data name="DocumentHeader.ContextMenu.CloseOthers" xml:space="preserve">
    <value>Zamknij pozostałe</value>
  </data>
  <data name="DocumentHeader.ContextMenu.TabColor" xml:space="preserve">
    <value>Kolor zakładki</value>
  </data>
  <data name="DocumentHeader.ContextMenu.TabColor.Blue" xml:space="preserve">
    <value>Niebieski</value>
  </data>
  <data name="DocumentHeader.ContextMenu.TabColor.Default" xml:space="preserve">
    <value>Domyślny</value>
  </data>
  <data name="DocumentHeader.ContextMenu.TabColor.Green" xml:space="preserve">
    <value>Zielony</value>
  </data>
  <data name="DocumentHeader.ContextMenu.TabColor.Red" xml:space="preserve">
    <value>Czerwony</value>
  </data>
  <data name="DocumentHeader.ContextMenu.TabColor.Yellow" xml:space="preserve">
    <value>Żółty</value>
  </data>
  <data name="Message.FoundOccurrences" xml:space="preserve">
    <value>Znaleziono wystąpień: {0}.</value>
  </data>
  <data name="SearchWindow.CountOccurrences" xml:space="preserve">
    <value>Policz wystąpienia</value>
  </data>
  <data name="Ribbon.Text.Convert.Htm.Decode" xml:space="preserve">
    <value>Dekoduj HTML entities</value>
  </data>
  <data name="Ribbon.Text.Convert.Htm.Encode" xml:space="preserve">
    <value>Zakoduj HTML entities</value>
  </data>
  <data name="Ribbon.Text.Convert.Htm" xml:space="preserve">
    <value>HTML entities</value>
  </data>
  <data name="Ribbon.Home.Search.StoredReplaces" xml:space="preserve">
    <value>Zapisane zamiany</value>
  </data>
  <data name="Ribbon.Home.Search.StoredSearches" xml:space="preserve">
    <value>Zapisane wyszukania</value>
  </data>
  <data name="DocumentHeader.ContextMenu.MoveToOtherView" xml:space="preserve">
    <value>Przenieś do drugiego widoku</value>
  </data>
  <data name="Tool.Explorer.Files.Open" xml:space="preserve">
    <value>Otwórz</value>
  </data>
  <data name="Tool.Explorer.Files.OpenInHexeditor" xml:space="preserve">
    <value>Otwórz w hexedytorze</value>
  </data>
  <data name="Ribbon.Home.Group.Comparing" xml:space="preserve">
    <value>Porównywanie</value>
  </data>
  <data name="Ribbon_Home_Comparing_Compare" xml:space="preserve">
    <value>Porównaj dokumenty</value>
  </data>
  <data name="ConfigureDiffDialog.Title" xml:space="preserve">
    <value>Porównaj dokumenty</value>
  </data>
  <data name="ConfigureDiffDialog.Source" xml:space="preserve">
    <value>Źródło</value>
  </data>
  <data name="ConfigureDiffDialog.FirstDocument" xml:space="preserve">
    <value>Pierwszy dokument</value>
  </data>
  <data name="ConfigureDiffDialog.SecondDocument" xml:space="preserve">
    <value>Drugi dokument</value>
  </data>
  <data name="ConfigureDiffDialog.Options" xml:space="preserve">
    <value>Opcje</value>
  </data>
  <data name="ConfigureDiffDialog.IgnoreCase" xml:space="preserve">
    <value>Ignoruj wielkość liter</value>
  </data>
  <data name="ConfigureDiffDialog.IgnoreWhitespace" xml:space="preserve">
    <value>Ignoruj białe znaki</value>
  </data>
</root>