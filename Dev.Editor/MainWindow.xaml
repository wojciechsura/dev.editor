<f:RibbonWindow
    xmlns:f="urn:fluent-ribbon"
    x:Class="Dev.Editor.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Dev.Editor.Resources;assembly=Dev.Editor.Resources"
    xmlns:local="clr-namespace:Dev.Editor"
    xmlns:controls="clr-namespace:Dev.Editor.Controls"
    xmlns:converters="clr-namespace:Dev.Editor.Converters"
    xmlns:nav="clr-namespace:Dev.Editor.BusinessLogic.Models.Navigation;assembly=Dev.Editor.BusinessLogic"
    xmlns:wpf="clr-namespace:Dev.Editor.Wpf"
    xmlns:vm="clr-namespace:Dev.Editor.BusinessLogic.ViewModels.Main;assembly=Dev.Editor.BusinessLogic"
    xmlns:vme="clr-namespace:Dev.Editor.BusinessLogic.ViewModels.Tools.Explorer;assembly=Dev.Editor.BusinessLogic"
    xmlns:vmb="clr-namespace:Dev.Editor.BusinessLogic.ViewModels.Tools.BinDefinitions;assembly=Dev.Editor.BusinessLogic"
    xmlns:uit="clr-namespace:Dev.Editor.BusinessLogic.Types.UI;assembly=Dev.Editor.BusinessLogic"
    xmlns:mt="clr-namespace:Dev.Editor.BusinessLogic.Types.Main;assembly=Dev.Editor.BusinessLogic"
    xmlns:dt="clr-namespace:Dev.Editor.BusinessLogic.Types.Document;assembly=Dev.Editor.BusinessLogic"
    xmlns:mh="clr-namespace:Dev.Editor.BusinessLogic.Models.Highlighting;assembly=Dev.Editor.BusinessLogic"
    mc:Ignorable="d"
    Title="{Binding Title}" Height="450" Width="800" UseLayoutRounding="True"
    Closing="HandleWindowClosing" Loaded="HandleLoaded" Activated="HandleWindowActivated"
    Drop="HandleDrop" AllowDrop="True"
    FocusManager.FocusedElement="{Binding ElementName=tcePrimary}">

    <!-- Resources -->

    <f:RibbonWindow.Resources>
        <ResourceDictionary>

            <!-- Styles -->

            <Style TargetType="ButtonBase" x:Key="DocumentTabButtonStyle">
                <Style.Setters>
                    <Setter Property="TextBlock.Foreground" Value="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=StackPanel}}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ButtonBase">
                                <Border x:Name="ContentBorder" TextBlock.Foreground="{TemplateBinding Foreground}"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="cpContent" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Trigger.Setters>
                                            <Setter TargetName="cpContent" Property="Margin">
                                                <Setter.Value>
                                                    <Thickness Top="3" Left="3" Right="1" Bottom="1" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger.Setters>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextBlock.Foreground" Value="{StaticResource DocumentButtonHoverForegroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="RepeatButton" x:Key="DocumentTabScrollButtonStyle">
                <Style.Setters>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RepeatButton">
                                <Border x:Name="ContentBorder" TextBlock.Foreground="{StaticResource TabScrollButtonForegroundBrush}"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="cpContent" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Trigger.Setters>
                                            <Setter TargetName="cpContent" Property="Margin">
                                                <Setter.Value>
                                                    <Thickness Top="3" Left="3" Right="1" Bottom="1" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger.Setters>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ContentBorder" Property="TextElement.Foreground" Value="{StaticResource TabScrollButtonForegroundBrush}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="RootDockPanel" TargetType="DockPanel">
                <Style.Setters>
                    <Setter Property="Background" Value="{StaticResource FormBackgroundBrush}" />
                </Style.Setters>
            </Style>

            <Style x:Key="RootGridSplitter" TargetType="GridSplitter">
                <Style.Setters>
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridSplitter">
                                <Border Background="{StaticResource FormBackgroundBrush}" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="VerticalRootGridSplitter" TargetType="GridSplitter" BasedOn="{StaticResource RootGridSplitter}">
                <Style.Setters>
                    <Setter Property="Margin" Value="-2,0,-2,0" />
                    <Setter Property="Width" Value="4" />
                </Style.Setters>
            </Style>

            <Style x:Key="HorizontalRootGridSplitter" TargetType="GridSplitter" BasedOn="{StaticResource RootGridSplitter}">
                <Style.Setters>
                    <Setter Property="Margin" Value="0,-2,0,-2" />
                    <Setter Property="Height" Value="4" />
                </Style.Setters>
            </Style>

            <Style x:Key="RootTabItem" TargetType="TabItem">
                <Style.Setters>
                    <Setter Property="Background" Value="{StaticResource NormalTabBackgroundBrush}" />
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource NormalTabForegroundBrush}" />
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.Setters>
                            <Setter Property="Background" Value="{StaticResource HoverTabBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource HoverTabForegroundBrush}" />
                        </Trigger.Setters>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Trigger.Setters>
                            <Setter Property="Background" Value="{StaticResource SelectedTabBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource SelectedTabForegroundBrush}" />
                        </Trigger.Setters>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DocumentTabItem" TargetType="TabItem">
                <Style.Setters>
                    <Setter Property="Background" Value="{StaticResource NormalTabBackgroundBrush}" />
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource NormalTabForegroundBrush}" />
                    <Setter Property="controls:DocumentTabHeader.Pinned" Value="{Binding IsPinned}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="TabBorder" BorderThickness="0,0,0,2" BorderBrush="{Binding Path=Background, RelativeSource={RelativeSource Mode=Self}}" Background="{TemplateBinding Background}" 
                                        TextBlock.Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" Margin="6,2,6,0" />

                                    <Border.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_Close}" Command="{Binding CloseCommand}" />
                                            <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_CloseAll}" Command="{Binding CloseAllCommand}" />
                                            <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_CloseAllButPinned}" Command="{Binding CloseAllButPinnedCommand}" />
                                            <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_CloseOthers}" Command="{Binding CloseOthersCommand}" />
                                            <Separator />
                                            <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_MoveToOtherView}" Command="{Binding MoveToOtherViewCommand}" />
                                            <Separator />
                                            <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_TabColor}">
                                                <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_TabColor_Default}" Command="{Binding SetTabColorCommand}" CommandParameter="{x:Static dt:TabColor.Default}"
                                                          IsChecked="{Binding TabColor, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static dt:TabColor.Default}, Mode=OneWay}" />
                                                <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_TabColor_Red}" Command="{Binding SetTabColorCommand}" CommandParameter="{x:Static dt:TabColor.Red}"
                                                          IsChecked="{Binding TabColor, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static dt:TabColor.Red}, Mode=OneWay}"/>
                                                <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_TabColor_Yellow}" Command="{Binding SetTabColorCommand}" CommandParameter="{x:Static dt:TabColor.Yellow}"
                                                          IsChecked="{Binding TabColor, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static dt:TabColor.Yellow}, Mode=OneWay}"/>
                                                <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_TabColor_Green}" Command="{Binding SetTabColorCommand}" CommandParameter="{x:Static dt:TabColor.Green}"
                                                              IsChecked="{Binding TabColor, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static dt:TabColor.Green}, Mode=OneWay}"/>
                                                <MenuItem Header="{x:Static p:Strings.DocumentHeader_ContextMenu_TabColor_Blue}" Command="{Binding SetTabColorCommand}" CommandParameter="{x:Static dt:TabColor.Blue}"
                                                          IsChecked="{Binding TabColor, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static dt:TabColor.Blue}, Mode=OneWay}"/>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Red}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="{StaticResource RedTabBackgroundBrush}" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Yellow}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="{StaticResource YellowTabBackgroundBrush}" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Green}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="{StaticResource GreenTabBackgroundBrush}" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Blue}">
                                        <DataTrigger.Setters>
                                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="{StaticResource BlueTabBackgroundBrush}" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Red}">
                        <DataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource RedTabBackgroundBrush}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Yellow}">
                        <DataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource YellowTabBackgroundBrush}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Green}">
                        <DataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GreenTabBackgroundBrush}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TabColor}" Value="{x:Static dt:TabColor.Blue}">
                        <DataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource BlueTabBackgroundBrush}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.Setters>
                            <Setter Property="Background" Value="{StaticResource HoverTabBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource HoverTabForegroundBrush}" />
                        </Trigger.Setters>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Trigger.Setters>
                            <Setter Property="Background" Value="{StaticResource SelectedDocumentTabBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource SelectedDocumentTabForegroundBrush}" />
                        </Trigger.Setters>
                    </Trigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            <Condition Binding="{Binding IsActiveDocumentTab, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TabControlExt}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource SelectedInactiveDocumentTabBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource SelectedInactiveDocumentTabForegroundBrush}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DocumentTabControlStyle" TargetType="controls:TabControlExt">
                <Style.Setters>

                    <!-- Template for the whole tab control -->

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:TabControlExt}">
                                <Grid x:Name="Grid" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Border Grid.Row="1" Grid.Column="0" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" 
                                                          Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                                          ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" ContentSource="SelectedContent"/>
                                    </Border>

                                    <ScrollViewer x:Name="HeaderPanel" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" 
                                                  VerticalAlignment="Stretch" Margin="0" HorizontalScrollBarVisibility="Auto" 
                                                  VerticalScrollBarVisibility="Disabled" Focusable="False"
                                                  wpf:MouseEvents.DirectMouseDoubleClickCommand="{TemplateBinding HeaderDoubleClickCommand}"
                                                  wpf:ParentData.ParentItemsSource="{TemplateBinding ItemsSource}"
                                                  Drop="TabHeaderDrop">
                                        <ScrollViewer.Style>
                                            <Style TargetType="{x:Type ScrollViewer}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ScrollViewer">
                                                            <Grid Margin="0" x:Name="HeaderPanel">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <ScrollContentPresenter Grid.Column="0" Content="{TemplateBinding ScrollViewer.Content}" />
                                                                <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Bottom"
                                                                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                                                    <RepeatButton Content="3" FontFamily="Marlett" FontSize="12" Padding="2" MinHeight="24"
                                                                                      Command="ScrollBar.LineLeftCommand" Style="{StaticResource DocumentTabScrollButtonStyle}"/>
                                                                    <RepeatButton Content="4" FontFamily="Marlett" FontSize="12" Padding="2" MinHeight="24"
                                                                                  Command="ScrollBar.LineRightCommand" Style="{StaticResource DocumentTabScrollButtonStyle}"/>
                                                                </StackPanel>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ScrollViewer.Style>
                                        <controls:DocumentTabHeader IsItemsHost="True" Background="{x:Null}" />
                                    </ScrollViewer>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!-- Template for doument tab header -->

                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel x:Name="spDocTabItemRoot" Orientation="Horizontal"
                                            PreviewMouseDown="DocumentTabItemPreviewMouseDown"
                                            PreviewMouseMove="DocumentTabItemPreviewMouseMove" 
                                            Drop="DocumentTabItemDrop">
                                    <Image Width="16" Height="16" Source="{Binding Icon}"/>
                                    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" MaxWidth="200" Margin="2"/>
                                    <TextBlock Text="•" Margin="2" Visibility="{Binding Changed, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <ToggleButton Width="16" Height="16" FontSize="10" Style="{StaticResource DocumentTabButtonStyle}" IsChecked="{Binding IsPinned, Mode=TwoWay}"
                                                  VerticalAlignment="Center">
                                        <Grid>
                                            <!-- Pin on icon -->
                                            <Path Width="8" Height="8" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                                Visibility="{Binding IsPinned, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Path.Data>
                                                    <PathGeometry Figures="M 1 0 L 1 4 L 0 4 L 0 5 L 3 5 L 3 8 L 4 8 L 4 5 L 7 5 L 7 4 L 6 4 L 6 0 L 1 0 z M 2 1 L 4 1 L 4 4 L 2 4 L 2 1 z " FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>

                                            <!-- Pin off icon -->
                                            <Path Width="8" Height="8" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                                Visibility="{Binding IsPinned, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                                <Path.Data>
                                                    <PathGeometry Figures="M 3 0 L 3 3 L 0 3 L 0 4 L 3 4 L 3 7 L 4 7 L 4 6 L 8 6 L 8 1 L 4 1 L 4 0 L 3 0 z M 4 2 L 7 2 L 7 4 L 4 4 L 4 2 z " FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>
                                        </Grid>
                                    </ToggleButton>
                                    <Button Width="16" Height="16" Command="{Binding CloseCommand}" Style="{StaticResource DocumentTabButtonStyle}"
                                            VerticalAlignment="Center">
                                        <Path Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                            <Path.Data>
                                                <PathGeometry Figures="M 0 1 L 4 5 L 0 9 L 2 9 L 5 6 L 8 9 L 10 9 L 6 5 L 10 1 L 8 1 L 5 4 L 2 1 Z" />
                                            </Path.Data>
                                        </Path>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="SidePanelTabItem" TargetType="TabItem" BasedOn="{StaticResource RootTabItem}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="TabBorder" BorderBrush="Transparent" Background="{TemplateBinding Background}" 
                                                    TextBlock.Foreground="{TemplateBinding Foreground}">
                                    <StackPanel Orientation="Vertical" Margin="2,6">

                                        <Image Width="16" Height="16" Source="{Binding Icon}" Margin="2" />

                                        <TextBlock Text="{Binding Title}" Margin="2">
                                            <TextBlock.LayoutTransform>
                                                <RotateTransform Angle="90" />
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>

                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Trigger.Setters>
                                            <Setter TargetName="TabBorder" Property="BorderThickness">
                                                <Setter.Value>
                                                    <Thickness Left="1" Top="1" Right="0" Bottom="1" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger.Setters>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Trigger.Setters>
                                            <Setter TargetName="TabBorder" Property="BorderThickness">
                                                <Setter.Value>
                                                    <Thickness Left="0" Top="1" Right="1" Bottom="1" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger.Setters>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <!-- Converters -->

            <converters:SidePanelToColumnConverter x:Key="SidePanelToColumnConverter" />
            <converters:SidePanelToVisibilityConverter x:Key="SidePanelToVisibilityConverter" />
            <converters:SidePanelToTabPlacement x:Key="SidePanelToTabPlacement" />
            <converters:AdditionalToolsetToVisibilityConverter x:Key="AdditionalToolsetToVisibilityConverter" />
            <converters:SearchReplaceOperationToImageConverter x:Key="SearchReplaceOperationToImageConverter" />
            <converters:SideToolToIntConverter x:Key="SideToolToIntConverter" />
            <converters:BottomToolToIntConverter x:Key="BottomToolToIntConverter" />

            <!-- Template selectors -->

            <wpf:DocumentTemplateSelector x:Key="DocumentTemplateSelector" />
        </ResourceDictionary>
    </f:RibbonWindow.Resources>

    <f:RibbonWindow.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewTextCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenTextCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}" />
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyCommand}" />
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteCommand}" />
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="{Binding RedoCommand}" />
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding SearchCommand}" />
        <KeyBinding Key="F" Modifiers="Ctrl+Shift" Command="{Binding FindInFilesCommand}" />
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding ReplaceCommand}" />
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{Binding FindNextCommand}" />
        <KeyBinding Key="F3" Command="{Binding FindNextCommand}" />
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding NavigateCommand}" />
        <KeyBinding Key="F4" Modifiers="Ctrl" Command="{Binding CloseCurrentDocumentCommand}" />
    </f:RibbonWindow.InputBindings>

    <!-- Main content -->

    <DockPanel Style="{StaticResource RootDockPanel}">

        <!-- Ribbon -->

        <f:Ribbon DockPanel.Dock="Top" Focusable="False" FocusManager.IsFocusScope="True">
            <f:Ribbon.KeyTipKeys>
                <Key>F10</Key>
            </f:Ribbon.KeyTipKeys>

            <f:Ribbon.Menu>
                <f:ApplicationMenu>
                    <f:MenuItem Header="{x:Static p:Strings.Ribbon_Home_File_New}" Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/New32.png" Command="{Binding NewTextCommand}" />
                    <f:MenuItem Header="{x:Static p:Strings.Ribbon_Home_File_Open}" Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open32.png" Command="{Binding OpenTextCommand}" />
                    <f:MenuItem Header="{x:Static p:Strings.Ribbon_Home_File_Save}" Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save32.png" Command="{Binding SaveCommand}" />
                    <Separator />
                    <f:MenuItem Header="{x:Static p:Strings.Configuration}" Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Settings32.png" Command="{Binding ConfigCommand}" />
                </f:ApplicationMenu>
            </f:Ribbon.Menu>

            <!-- Contextual group definitions -->

            <f:Ribbon.ContextualGroups>
                <f:RibbonContextualTabGroup x:Name="rctgXml" Header="{x:Static p:Strings.Ribbon_ContextGroup_Xml}" 
                                            Visibility="{Binding Documents.ActiveDocument.Highlighting.AdditionalToolset, Converter={StaticResource AdditionalToolsetToVisibilityConverter}, ConverterParameter={x:Static uit:AdditionalToolset.Xml}}"
                                            Background="#0000a0" />
                <f:RibbonContextualTabGroup x:Name="rctgMarkdown" Header="{x:Static p:Strings.Ribbon_ContextGroup_Markdown}"
                                            Visibility="{Binding Documents.ActiveDocument.Highlighting.AdditionalToolset, Converter={StaticResource AdditionalToolsetToVisibilityConverter}, ConverterParameter={x:Static uit:AdditionalToolset.Markdown}}"
                                            Background="#00a000" />
                <f:RibbonContextualTabGroup x:Name="rctgJson" Header="{x:Static p:Strings.Ribbon_ContextGroup_Json}"
                                            Visibility="{Binding Documents.ActiveDocument.Highlighting.AdditionalToolset, Converter={StaticResource AdditionalToolsetToVisibilityConverter}, ConverterParameter={x:Static uit:AdditionalToolset.Json}}"
                                            Background="#a00000" />
            </f:Ribbon.ContextualGroups>

            <!-- Home tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_Home}"
                             ReduceOrder="grHomeEdit, grHomeFile">

                <!-- File -->

                <f:RibbonGroupBox x:Name="grHomeFile" Header="{x:Static p:Strings.Ribbon_Home_Group_File}">
                    <f:SplitButton Header="{x:Static p:Strings.Ribbon_Home_File_Open}" Command="{Binding OpenTextCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open16.png">
                        <f:MenuItem Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open16.png"
                                    Header="{x:Static p:Strings.Ribbon_Home_File_OpenHex}"
                                    Command="{Binding OpenHexCommand}" />
                        <f:MenuItem Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open16.png"
                                    Header="{x:Static p:Strings.Ribbon_Home_File_OpenBin}"
                                    Command="{Binding OpenBinCommand}" />
                    </f:SplitButton>
                    <f:SplitButton Header="{x:Static p:Strings.Ribbon_Home_File_New}" Command="{Binding NewTextCommand}" SizeDefinition="Middle, Small" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/New32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/New16.png">
                        <f:MenuItem Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/New16.png"
                                    Header="{x:Static p:Strings.Ribbon_Home_File_NewHex}"
                                    Command="{Binding NewHexCommand}" />
                    </f:SplitButton>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Home_File_Save}" Command="{Binding SaveCommand}" SizeDefinition="Middle, Small"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Home_File_SaveAs}" Command="{Binding SaveAsCommand}" SizeDefinition="Middle, Small"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save16.png"/>
                </f:RibbonGroupBox>

                <!-- Edit -->

                <f:RibbonGroupBox x:Name="grHomeEdit" Header="{x:Static p:Strings.Ribbon_Home_Group_Edit}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Home_Edit_Paste}" Command="{Binding PasteCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Paste32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Paste16.png"/>

                    <f:RibbonToolBar>
                        <f:RibbonToolBar.LayoutDefinitions>

                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditUndo" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditRedo" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCopy" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCut" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                            <f:RibbonToolBarLayoutDefinition Size="Middle">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditUndo" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditRedo" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCopy" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditCut" Size="Small" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bEditUndo" Header="{x:Static p:Strings.Ribbon_Home_Edit_Undo}" Command="{Binding UndoCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Undo32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Undo16.png"/>
                        <f:Button x:Name="bEditRedo" Header="{x:Static p:Strings.Ribbon_Home_Edit_Redo}" Command="{Binding RedoCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Redo32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Redo16.png"/>
                        <f:Button x:Name="bEditCopy" Header="{x:Static p:Strings.Ribbon_Home_Edit_Copy}" Command="{Binding CopyCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Copy32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Copy16.png"/>
                        <f:Button x:Name="bEditCut" Header="{x:Static p:Strings.Ribbon_Home_Edit_Cut}" Command="{Binding CutCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Cut32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Cut16.png"/>

                    </f:RibbonToolBar>

                </f:RibbonGroupBox>

                <!-- Search -->

                <f:RibbonGroupBox x:Name="grSearch" Header="{x:Static p:Strings.Ribbon_Home_Group_Search}">
                    <f:RibbonGroupBox.Resources>
                        <DataTemplate x:Key="SearchItemTemplate" DataType="{x:Type vm:StoredSearchReplaceViewModel}">
                            <f:MenuItem Header="{Binding SearchName}" Icon="{Binding Operation, Converter={StaticResource SearchReplaceOperationToImageConverter}}" 
                                                Command="{Binding RunStoredSearchCommand}" CommandParameter="{Binding StoredSearchReplace}"/>
                        </DataTemplate>
                    </f:RibbonGroupBox.Resources>
                    <f:SplitButton Header="{x:Static p:Strings.Ribbon_Home_Search_Search}" Command="{Binding SearchCommand}" SizeDefinition="Large"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Search32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Search16.png">
                        <f:GroupSeparatorMenuItem Header="{x:Static p:Strings.Ribbon_Home_Search_StoredSearches}" />
                        <ItemsControl ItemsSource="{Binding StoredSearches}" ItemTemplate="{StaticResource SearchItemTemplate}" />
                    </f:SplitButton>
                    <f:SplitButton Header="{x:Static p:Strings.Ribbon_Home_Search_FindInFiles}" Command="{Binding FindInFilesCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Search32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Search16.png">
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Home_Search_ReplaceInFiles}" Command="{Binding ReplaceInFilesCommand}" 
                                    Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Replace16.png" />
                    </f:SplitButton>
                    <f:SplitButton Header="{x:Static p:Strings.Ribbon_Home_Search_Replace}" Command="{Binding ReplaceCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Replace32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Replace16.png">
                        <f:GroupSeparatorMenuItem Header="{x:Static p:Strings.Ribbon_Home_Search_StoredReplaces}" />
                        <ItemsControl ItemsSource="{Binding StoredReplaces}" ItemTemplate="{StaticResource SearchItemTemplate}" />
                    </f:SplitButton>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Home_Search_FindNext}" Command="{Binding FindNextCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/FindNext32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/FindNext16.png"/>
                </f:RibbonGroupBox>

                <!-- Compare -->

                <f:RibbonGroupBox x:Name="grCompare" Header="{x:Static p:Strings.Ribbon_Home_Group_Comparing}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Home_Comparing_Compare}" Command="{Binding CompareCommand}" SizeDefinition="Large"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Compare32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Compare16.png" />

                    <f:RibbonToolBar>
                        <f:RibbonToolBar.LayoutDefinitions>

                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bPreviousChange" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bNextChange" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                            <f:RibbonToolBarLayoutDefinition Size="Middle">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bPreviousChange" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bNextChange" Size="Small" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bPreviousChange" Header="{x:Static p:Strings.Ribbon_Home_Comparing_PreviousChange}" Command="{Binding PreviousChangeCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Up32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Up16.png"/>
                        <f:Button x:Name="bNextChange" Header="{x:Static p:Strings.Ribbon_Home_Comparing_NextChange}" Command="{Binding NextChangeCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Down32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Down16.png"/>
                        
                    </f:RibbonToolBar>


                </f:RibbonGroupBox>
                
                <!-- Navigation -->

                <f:RibbonGroupBox x:Name="grNavigation" Header="{x:Static p:Strings.Ribbon_Home_Group_Navigation}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Home_Navigation_Navigate}" Command="{Binding NavigateCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Navigation32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Navigation16.png" />

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- View tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_View}">

                <!-- Editor -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_View_Group_Editor}">

                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_View_Editor_WordWrap}" IsChecked="{Binding WordWrap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding Documents.ActiveDocument, Converter={StaticResource TextDocToBoolConverter}}"/>
                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_View_Editor_ShowLineNumbers}" IsChecked="{Binding LineNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding Documents.ActiveDocument, Converter={StaticResource TextDocToBoolConverter}}"/>

                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_View_Group_Interface}" HorizontalContentAlignment="Left"
                                  Grid.IsSharedSizeScope="True">

                    <f:ComboBox Header="{x:Static p:Strings.Ribbon_View_Interface_SidePanel}" ItemsSource="{Binding SidePanelPlacements}" 
                                DisplayMemberPath="Display" SelectedValuePath="Value"
                                SelectedValue="{Binding SidePanelPlacement}" IsEditable="False" Width="150" />

                    <f:ComboBox Header="{x:Static p:Strings.Ribbon_View_Interface_BottomPanel}" ItemsSource="{Binding BottomPanelVisibilities}" 
                                DisplayMemberPath="Display" SelectedValuePath="Value"
                                SelectedValue="{Binding BottomPanelVisibility}" IsEditable="False" Width="150" />

                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_View_Interface_ShowSecondaryDocumentTab}"
                                IsChecked="{Binding Documents.ShowSecondaryDocumentTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </f:RibbonGroupBox>

                <!-- Syntax highlighting -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_View_View_SyntaxHighlighting}">
                    <Label Content="{x:Static p:Strings.Ribbon_View_View_SyntaxHighlighting}" />
                    <f:ComboBox ItemsSource="{Binding Highlightings}" SelectedItem="{Binding Documents.ActiveDocument.Highlighting}" 
                                IsEnabled="{Binding Documents.ActiveDocument, Converter={StaticResource TextDocToBoolConverter}}"
                                Width="200" IsEditable="False">
                        <f:ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type mh:HighlightingInfo}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Source="{Binding Icon}" />
                                    <TextBlock Margin="4" Text="{Binding Name}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </f:ComboBox.ItemTemplate>
                    </f:ComboBox>
                </f:RibbonGroupBox>
                
            </f:RibbonTabItem>

            <!-- Lines tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_Lines}">

                <!-- Ordering -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Lines_Group_Ordering}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_Lines_Ordering_SortAscending}" Command="{Binding SortLinesAscendingCommand}"
                              SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortAscending32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortAscending16.png"/>

                    <f:Button Header="{x:Static p:Strings.Ribbon_Lines_Ordering_SortDescending}" Command="{Binding SortLinesDescendingCommand}" 
                              SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortDescending32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortDescending16.png"/>

                </f:RibbonGroupBox>

                <!-- Cleanup -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Lines_Group_Cleanup}">

                    <f:SplitButton Header="{x:Static p:Strings.Ribbon_Lines_Cleanup_RemoveEmptyLines}" Command="{Binding RemoveEmptyLinesCommand}"
                                   LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/DeleteLine32.png"
                                   Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/DeleteLine16.png"     
                                   SizeDefinition="Large">
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Lines_Cleanup_RemoveWhitespaceLines}" Command="{Binding RemoveWhitespaceLinesCommand}" />
                    </f:SplitButton>

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- Text tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_Text}">

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Text_Convert}">

                    <f:DropDownButton Size="Large" Header="{x:Static p:Strings.Ribbon_Text_Convert_Base64}"
                                      LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/ConvertBase6432.png"
                                      Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/ConvertBase6416.png">
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Convert_Base64_ToBase64}" Command="{Binding Base64EncodeCommand}" />
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Convert_Base64_FromBase64}" Command="{Binding Base64DecodeCommand}" />
                    </f:DropDownButton>

                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Text_Transform}">
                    <f:DropDownButton SizeDefinition="Large" Header="{x:Static p:Strings.Ribbon_Text_Transform_Case}" 
                                      LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Case32.png"
                                      Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Case16.png">
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Transform_Case_Lowercase}" Command="{Binding LowercaseCommand}"/>
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Transform_Case_Uppercase}" Command="{Binding UppercaseCommand}"/>
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Transform_Case_Naming}" Command="{Binding NamingCaseCommand}"/>
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Transform_Case_Sentence}" Command="{Binding SentenceCaseCommand}"/>
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Transform_Case_Invert}" Command="{Binding InvertCaseCommand}"/>
                    </f:DropDownButton>
                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Text_Escape}">

                        <f:DropDownButton Size="Large" Header="{x:Static p:Strings.Ribbon_Text_Escape_Htm}"
                                      LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/ConvertHtml32.png"
                                      Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/ConvertHtml16.png">
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Escape_Htm_Encode}" Command="{Binding HtmlEntitiesEncodeCommand}" />
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Escape_Htm_Decode}" Command="{Binding HtmlEntitiesDecodeCommand}" />
                    </f:DropDownButton>

                    <f:DropDownButton Size="Large" Header="{x:Static p:Strings.Ribbon_Text_Escape_Escape}"
                                      LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Escape32.png"
                                      Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Escape16.png">
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Escape_Escape_Backslash}" Command="{Binding EscapeCommand}" CommandParameter="\" />
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Escape_Unescape_Backslash}" Command="{Binding UnescapeCommand}" CommandParameter="\" />
                        <Separator />
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Escape_Escape}" Command="{Binding EscapeCommand}" />
                        <f:MenuItem Header="{x:Static p:Strings.Ribbon_Text_Escape_Unescape}" Command="{Binding UnescapeCommand}" />
                    </f:DropDownButton>
                    
                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- XML tools tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_XmlTools}"
                             Group="{Binding ElementName=rctgXml}">

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_XmlTools_Group_Formatting}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_XmlTools_Formatting_Format}" Command="{Binding FormatXmlCommand}"
                              SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/FormatXml32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/FormatXml16.png"/>

                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_XmlTools_Group_Transform}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_XmlTools_Transform_XSLT}" Command="{Binding TransformXsltCommand}"
                              SizeDefinition="Large" />
                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- Markdown tools tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_MarkdownTools}"
                             Group="{Binding ElementName=rctgMarkdown}">

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Markdown_Headers}">

                    <f:Button SizeDefinition="Large" Header="{x:Static p:Strings.Ribbon_Markdown_Headers_H1}" Command="{Binding InsertMarkdownHeader1Command}"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/H132.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/H116.png"/>
                    <f:Button SizeDefinition="Large" Header="{x:Static p:Strings.Ribbon_Markdown_Headers_H2}" Command="{Binding InsertMarkdownHeader2Command}" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/H232.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/H216.png"/>

                    <f:RibbonToolBar>
                        <f:RibbonToolBar.LayoutDefinitions>

                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownH3" Size="Middle" />
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownH4" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownH5" Size="Middle" />
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownH6" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>
                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bMarkdownH3" SizeDefinition="Medium" Header="{x:Static p:Strings.Ribbon_Markdown_Headers_H3}" Command="{Binding InsertMarkdownHeader3Command}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/H332.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/H316.png"/>

                        <f:Button x:Name="bMarkdownH4" SizeDefinition="Medium" Header="{x:Static p:Strings.Ribbon_Markdown_Headers_H4}" Command="{Binding InsertMarkdownHeader4Command}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/H432.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/H416.png"/>

                        <f:Button x:Name="bMarkdownH5" SizeDefinition="Medium" Header="{x:Static p:Strings.Ribbon_Markdown_Headers_H5}" Command="{Binding InsertMarkdownHeader5Command}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/H532.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/H516.png"/>

                        <f:Button x:Name="bMarkdownH6" SizeDefinition="Medium" Header="{x:Static p:Strings.Ribbon_Markdown_Headers_H6}" Command="{Binding InsertMarkdownHeader6Command}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/H632.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/H616.png"/>

                    </f:RibbonToolBar>

                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Markdown_Blocks}">

                    <f:Button SizeDefinition="Large" Header="{x:Static p:Strings.Ribbon_Markdown_Blocks_Code}" Command="{Binding InsertMarkdownBlockCodeCommand}" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Source32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Source16.png"/>

                    <f:RibbonToolBar>

                        <f:RibbonToolBar.LayoutDefinitions>
                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownBlockquote" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownOrderedList" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownUnorderedList" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>
                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bMarkdownBlockquote" Header="{x:Static p:Strings.Ribbon_Markdown_Blocks_Blockquote}" Command="{Binding InsertMarkdownBlockquoteCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Quote32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Quote16.png"/>
                        <f:Button x:Name="bMarkdownOrderedList" Header="{x:Static p:Strings.Ribbon_Markdown_Blocks_OrderedList}" Command="{Binding InsertMarkdownOrderedListCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/OrderedList32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/OrderedList16.png"/>
                        <f:Button x:Name="bMarkdownUnorderedList" Header="{x:Static p:Strings.Ribbon_Markdown_Blocks_UnorderedList}" Command="{Binding InsertMarkdownUnorderedListCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/UnorderedList32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/UnorderedList16.png"/>

                    </f:RibbonToolBar>

                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Markdown_Inline}">

                    <f:RibbonToolBar>

                        <f:RibbonToolBar.LayoutDefinitions>
                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownCode" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownEmphasis" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bMarkdownStrong" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>
                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bMarkdownCode" Header="{x:Static p:Strings.Ribbon_Markdown_Inline_Code}" Command="{Binding InsertMarkdownInlineCodeCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Source32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Source16.png"/>
                        <f:Button x:Name="bMarkdownEmphasis" Header="{x:Static p:Strings.Ribbon_Markdown_Inline_Emphasis}" Command="{Binding InsertMarkdownEmphasisCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Italic32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Italic16.png"/>
                        <f:Button x:Name="bMarkdownStrong" Header="{x:Static p:Strings.Ribbon_Markdown_Inline_Strong}" Command="{Binding InsertMarkdownStrongCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Bold32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Bold16.png"/>

                    </f:RibbonToolBar>

                </f:RibbonGroupBox>

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Markdown_Insert}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_Markdown_Insert_Link}" Command="{Binding InsertMarkdownLinkCommand}" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Link32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Link16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Markdown_Insert_Picture}" Command="{Binding InsertMarkdownPictureCommand}" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Image32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Image16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Markdown_Insert_Hr}" Command="{Binding InsertMarkdownHorizontalRuleCommand}" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/HorizontalRule32.png"
                                  Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/HorizontalRule16.png"/>

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- Json tools tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_JsonTools}"
                             Group="{Binding ElementName=rctgJson}">

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_JsonTools_Group_Formatting}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_JsonTools_Formatting_Format}" Command="{Binding FormatJsonCommand}"
                              SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/FormatXml32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/FormatXml16.png"/>

                </f:RibbonGroupBox>

            </f:RibbonTabItem>            
            
        </f:Ribbon>

        <!-- Window content -->

        <Grid Margin="{StaticResource HalfMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="bottomPanelRow" />
            </Grid.RowDefinitions>

            <!-- Main content -->

            <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="leftPanelColumn" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition x:Name="rightPanelColumn" />
                </Grid.ColumnDefinitions>

                <!-- Side panel -->

                <TabControl x:Name="rightPanel" Grid.Column="{Binding SidePanelPlacement, Converter={StaticResource SidePanelToColumnConverter}}" 
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="100"
                            Visibility="{Binding SidePanelPlacement, Converter={StaticResource SidePanelToVisibilityConverter}}"
                            TabStripPlacement="{Binding SidePanelPlacement, Converter={StaticResource SidePanelToTabPlacement}}"                                    
                            Margin="{StaticResource HalfMargin}" Padding="0" BorderThickness="0"
                            ItemContainerStyle="{StaticResource SidePanelTabItem}" SelectedIndex="{Binding SelectedSideTool, Mode=TwoWay, Converter={StaticResource SideToolToIntConverter}}">

                    <TabItem DataContext="{Binding ExplorerToolViewModel}">
                        <controls:ExplorerTool />
                    </TabItem>

                    <TabItem DataContext="{Binding ProjectToolViewModel}">
                        <controls:ProjectTool />
                    </TabItem>
                    
                    <TabItem DataContext="{Binding BinDefinitionsToolViewModel}">
                        <controls:BinDefinitionsTool />
                    </TabItem>

                </TabControl>

                <GridSplitter x:Name="leftPanelSplitter" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" 
                              Visibility="{Binding SidePanelPlacement, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static uit:SidePanelPlacement.Left}}"
                              Style="{StaticResource VerticalRootGridSplitter}"/>

                <!-- Document area -->

                <Grid Grid.Column="2">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" x:Name="cdPrimary" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" x:Name="cdSecondary" />
                    </Grid.ColumnDefinitions>

                    <!-- Primary document tab -->

                    <controls:TabControlExt x:Name="tcePrimary"
                                            Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{StaticResource HalfMargin}"
                                            ItemsSource="{Binding Documents.PrimaryDocuments}" SelectedItem="{Binding Documents.SelectedPrimaryDocument}" 
                                            BorderThickness="0" Padding="0" ContentTemplateSelector="{StaticResource DocumentTemplateSelector}"
                                            ItemContainerStyle="{StaticResource DocumentTabItem}" HeaderDoubleClickCommand="{Binding NewPrimaryTextCommand}"
                                            GotFocus="PrimaryDocumentTabGotFocus" Style="{StaticResource DocumentTabControlStyle}" 
                                            IsActiveDocumentTab="{Binding Documents.ActiveDocumentTab, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static mt:DocumentTabKind.Primary}}" />

                    <!-- Document tab splitter -->

                    <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center"
                                  Visibility="{Binding Documents.ShowSecondaryDocumentTab, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  Style="{StaticResource VerticalRootGridSplitter}" />

                    <!-- Secondary document tab -->

                    <controls:TabControlExt x:Name="tceSecondary"
                                            Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{StaticResource HalfMargin}"
                                            ItemsSource="{Binding Documents.SecondaryDocuments}" SelectedItem="{Binding Documents.SelectedSecondaryDocument}" 
                                            BorderThickness="0" Padding="0" ContentTemplateSelector="{StaticResource DocumentTemplateSelector}"
                                            ItemContainerStyle="{StaticResource DocumentTabItem}" HeaderDoubleClickCommand="{Binding NewSecondaryTextCommand}"                                            
                                            GotFocus="SecondaryDocumentTabGotFocus" Style="{StaticResource DocumentTabControlStyle}" 
                                            IsActiveDocumentTab="{Binding Documents.ActiveDocumentTab, Converter={StaticResource EqualsParameterToBoolConverter}, ConverterParameter={x:Static mt:DocumentTabKind.Secondary}}"
                                            Visibility="{Binding Documents.ShowSecondaryDocumentTab, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <GridSplitter x:Name="rightPanelSplitter" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"
                              Visibility="{Binding SidePanelPlacement, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static uit:SidePanelPlacement.Right}}"
                              Style="{StaticResource VerticalRootGridSplitter}"/>
            </Grid>

            <!-- Bottom panel -->

            <GridSplitter x:Name="bottomPanelSplitter" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          Visibility="{Binding BottomPanelVisibility, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static uit:BottomPanelVisibility.Visible}}"
                          Style="{StaticResource HorizontalRootGridSplitter}"/>

            <TabControl x:Name="bottomPanel" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="100" Margin="{StaticResource HalfMargin}"
                    Visibility="{Binding BottomPanelVisibility, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static uit:BottomPanelVisibility.Visible}}"
                    TabStripPlacement="Bottom" Padding="0" BorderThickness="0" SelectedIndex="{Binding SelectedBottomTool, Mode=TwoWay, Converter={StaticResource BottomToolToIntConverter}}">
                <TabControl.Resources>
                    <Style TargetType="TabItem" BasedOn="{StaticResource RootTabItem}">
                        <Style.Setters>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Border x:Name="TabBorder" BorderBrush="Transparent" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}"
                                                TextBlock.Foreground="{TemplateBinding Foreground}">
                                            <StackPanel Orientation="Horizontal" Margin="6,2">
                                                <Image Width="16" Height="16" Source="{Binding Icon}" Margin="2" />
                                                <TextBlock Text="{Binding Title}" Margin="2" />
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </TabControl.Resources>

                <TabItem DataContext="{Binding MessagesBottomToolViewModel}">
                    <controls:MessagesBottomTool />
                </TabItem>

                <TabItem DataContext="{Binding SearchResultsBottomToolViewModel}">
                    <controls:SearchResultsTool />
                </TabItem>
            </TabControl>

            <Popup x:Name="pNavigation" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,0" StaysOpen="False"
               Placement="Center" AllowsTransparency="True" PreviewKeyDown="HandleNavigationPreviewKeyDown" FocusManager.IsFocusScope="True">
                <StackPanel Orientation="Vertical" Background="#80000000">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/Dev.Editor;component/Resources/Images/Navigation16.png" 
                           Margin="4,4,0,4"/>
                        <Label Content="{x:Static p:Strings.NavigationPopup_Header}" Foreground="White"/>
                    </StackPanel>

                    <Rectangle HorizontalAlignment="Stretch" Height="1" Fill="White" />

                    <TextBox x:Name="tbNavigation" Width="300" Margin="10" Text="{Binding NavigationText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextChanged="HandleNavigationTextboxTextChanged" />

                    <ListBox x:Name="lbNavigation" Width="300" Height="200" Margin="10,0,10,10" ItemsSource="{Binding NavigationItems}"
                         SelectedItem="{Binding SelectedNavigationItem}" Focusable="False" MouseDoubleClick="HandleNavigationListMouseDoubleClick">
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border Name="SelectionBorder" Background="Transparent" CornerRadius="1">
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Trigger.Setters>
                                                        <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                                                        <Setter TargetName="SelectionBorder" Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                                                    </Trigger.Setters>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type nav:BaseNavigationModel}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Margin="4" Source="{Binding Icon}" Opacity="{Binding Enabled, Converter={StaticResource EnabledToOpactityConverter}}" />
                                    <TextBlock x:Name="lNavItem" Text="{Binding Title}" Margin="4" Opacity="{Binding Enabled, Converter={StaticResource EnabledToOpactityConverter}}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Popup>

        </Grid>

    </DockPanel>
</f:RibbonWindow>
