<f:RibbonWindow
    xmlns:f="urn:fluent-ribbon"
    x:Class="Dev.Editor.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Dev.Editor.Resources;assembly=Dev.Editor.Resources"
    xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"    
    xmlns:local="clr-namespace:Dev.Editor"
    xmlns:controls="clr-namespace:Dev.Editor.Controls"
    xmlns:vmd="clr-namespace:Dev.Editor.BusinessLogic.ViewModels.Document;assembly=Dev.Editor.BusinessLogic"
    xmlns:nav="clr-namespace:Dev.Editor.BusinessLogic.Models.Navigation;assembly=Dev.Editor.BusinessLogic"
    xmlns:wpf="clr-namespace:Dev.Editor.Wpf"
    mc:Ignorable="d"
    Title="Dev.Editor" Height="450" Width="800" Closing="HandleWindowClosing">

    <f:RibbonWindow.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}" />
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyCommand}" />
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteCommand}" />
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="{Binding RedoCommand}" />
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding SearchCommand}" />
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding ReplaceCommand}" />
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{Binding FindNextCommand}" />
        <KeyBinding Key="F3" Command="{Binding FindNextCommand}" />
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding NavigateCommand}" />
    </f:RibbonWindow.InputBindings>

    <f:RibbonWindow.Resources>
        <ResourceDictionary>
            <wpf:DocumentTemplateSelector x:Key="DocumentTemplateSelector" />
        </ResourceDictionary>
    </f:RibbonWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <f:Ribbon Focusable="False" FocusManager.IsFocusScope="True">
            <f:Ribbon.Menu>
                <f:ApplicationMenu>

                </f:ApplicationMenu>
            </f:Ribbon.Menu>

            <!-- Home tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_Home}"
                             ReduceOrder="grHomeEdit, grHomeFile">

                <!-- File -->

                <f:RibbonGroupBox x:Name="grHomeFile" Header="{x:Static p:Strings.Ribbon_Group_File}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_Open}" Command="{Binding OpenCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Open16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_New}" Command="{Binding NewCommand}" SizeDefinition="Middle, Small" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/New32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/New16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_Save}" Command="{Binding SaveCommand}" SizeDefinition="Middle, Small"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_SaveAs}" Command="{Binding SaveAsCommand}" SizeDefinition="Middle, Small"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Save16.png"/>
                </f:RibbonGroupBox>

                <!-- Edit -->

                <f:RibbonGroupBox x:Name="grHomeEdit" Header="{x:Static p:Strings.Ribbon_Group_Edit}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Edit_Paste}" Command="{Binding PasteCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Paste32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Paste16.png"/>

                    <f:RibbonToolBar>
                        <f:RibbonToolBar.LayoutDefinitions>

                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditUndo" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditRedo" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCopy" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCut" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                            <f:RibbonToolBarLayoutDefinition Size="Middle">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditUndo" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditRedo" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCopy" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditCut" Size="Small" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bEditUndo" Header="{x:Static p:Strings.Ribbon_Edit_Undo}" Command="{Binding UndoCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Undo32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Undo16.png"/>
                        <f:Button x:Name="bEditRedo" Header="{x:Static p:Strings.Ribbon_Edit_Redo}" Command="{Binding RedoCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Redo32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Redo16.png"/>
                        <f:Button x:Name="bEditCopy" Header="{x:Static p:Strings.Ribbon_Edit_Copy}" Command="{Binding CopyCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Copy32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Copy16.png"/>
                        <f:Button x:Name="bEditCut" Header="{x:Static p:Strings.Ribbon_Edit_Cut}" Command="{Binding CutCommand}" 
                                  LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Cut32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Cut16.png"/>

                    </f:RibbonToolBar>

                </f:RibbonGroupBox>

                <!-- Search -->

                <f:RibbonGroupBox x:Name="grSearch" Header="{x:Static p:Strings.Ribbon_Group_Search}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Search_Search}" Command="{Binding SearchCommand}" SizeDefinition="Large"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Search32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Search16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Search_Replace}" Command="{Binding ReplaceCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Replace32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Replace16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Search_FindNext}" Command="{Binding FindNextCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/FindNext32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/FindNext16.png"/>
                </f:RibbonGroupBox>

                <!-- Navigation -->

                <f:RibbonGroupBox x:Name="grNavigation" Header="{x:Static p:Strings.Ribbon_Group_Navigation}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Navigation_Navigate}" Command="{Binding NavigateCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/Navigation32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/Navigation16.png" />

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- View tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_View}">

                <!-- Editor -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Group_Editor}">

                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_Editor_WordWrap}" IsChecked="{Binding WordWrap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_Editor_ShowLineNumbers}" IsChecked="{Binding LineNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </f:RibbonGroupBox>

                <!-- Syntax highlighting -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_View_SyntaxHighlighting}">

                    <f:InRibbonGallery ItemsSource="{Binding Highlightings}" 
                                       ItemWidth="80"
                                       ItemHeight="58"
                                       MinItemsInRow="6" 
                                       MaxItemsInRow="8" 
                                       SelectedItem="{Binding ActiveDocument.Highlighting}"
                                       IsEnabled="{Binding ActiveDocument, Converter={StaticResource NullToBoolConverter}}"
                                       GroupBy="Initial">
                        <f:InRibbonGallery.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <Image Width="32" Height="32" Source="{Binding Icon}"/>
                                    <Label Content="{Binding Name}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </f:InRibbonGallery.ItemTemplate>
                    </f:InRibbonGallery>

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- Lines tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_Lines}">

                <!-- Ordering -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Group_Ordering}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_Ordering_SortAscending}" Command="{Binding SortLinesAscendingCommand}"
                              SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortAscending32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortAscending16.png"/>

                    <f:Button Header="{x:Static p:Strings.Ribbon_Ordering_SortDescending}" Command="{Binding SortLinesDescendingCommand}" 
                              SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortDescending32.png"
                              Icon="pack://application:,,,/Dev.Editor;component/Resources/Images/SortDescending16.png"/>

                </f:RibbonGroupBox>

                <!-- Cleanup -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Group_Cleanup}">

                    <f:Button Header="{x:Static p:Strings.Ribbon_Cleanup_RemoveEmptyLines}" Command="{Binding RemoveEmptyLinesCommand}"
                              SizeDefinition="Middle" />
                    <f:Button Header="{x:Static p:Strings.Ribbon_Cleanup_RemoveWhitespaceLines}" Command="{Binding RemoveWhitespaceLinesCommand}"
                              SizeDefinition="Middle" />

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

        </f:Ribbon>

        <!-- Docking host -->

        <TabControl Grid.Row="1" ItemsSource="{Binding Documents}" SelectedItem="{Binding ActiveDocument}"
                    ContentTemplateSelector="{StaticResource DocumentTemplateSelector}">
            <TabControl.Resources>
                <ResourceDictionary>
                    <Style TargetType="Button" x:Key="TabCloseButtonStyle">
                        <Style.Setters>
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Padding" Value="2" />
                        </Style.Setters>
                    </Style>
                </ResourceDictionary>
            </TabControl.Resources>

            <TabControl.Template>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="Grid" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="1" Grid.Column="0" x:Name="ContentPanel" BorderBrush="#FFD0CEBF" BorderThickness="0,0,1,1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Border Background="{TemplateBinding Background}" x:Name="Border1">
                                    <ContentPresenter DataContext="{x:Null}" Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" ContentSource="SelectedContent"/>
                                </Border>
                            </Border>
                        </Border>

                        <ScrollViewer x:Name="HeaderPanel" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" 
                                      VerticalAlignment="Stretch" Margin="0,0,0,0" 
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                            <ScrollViewer.Style>
                                <Style TargetType="{x:Type ScrollViewer}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid Margin="0,0,0,0" Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <ScrollContentPresenter Grid.Column="0" Content="{TemplateBinding ScrollViewer.Content}" />
                                                    <RepeatButton Grid.Column="1" Content="3" FontFamily="Marlett" FontSize="12" Padding="2" Command="ScrollBar.LineLeftCommand" Style="{DynamicResource TabScrollerRepeatButtonStyle}"/>
                                                    <RepeatButton Grid.Column="2" Content="4" FontFamily="Marlett" FontSize="12" Padding="2" Command="ScrollBar.LineRightCommand" Style="{DynamicResource TabScrollerRepeatButtonStyle}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollViewer.Style>
                            <StackPanel IsItemsHost="true" Orientation="Horizontal" Background="{x:Null}" KeyboardNavigation.TabIndex="1" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" MaxWidth="200" Margin="2"/>
                        <TextBlock Text="•" Margin="2" Visibility="{Binding Content.Changed, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Button Content="r" FontFamily="Marlett" FontSize="10" Command="{Binding CloseCommand}" Style="{StaticResource TabCloseButtonStyle}"/>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>

        <!-- Navigation popup -->

        <Popup x:Name="pNavigation" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,40,0,0" StaysOpen="False"
               Placement="Center" AllowsTransparency="True" PreviewKeyDown="HandleNavigationPreviewKeyDown" FocusManager.IsFocusScope="True">
            <StackPanel Orientation="Vertical" Background="#80000000">
                <StackPanel Orientation="Horizontal">
                    <Image Source="pack://application:,,,/Dev.Editor;component/Resources/Images/Navigation16.png" 
                           Margin="4,4,0,4"/>
                    <Label Content="{x:Static p:Strings.NavigationPopup_Header}" Foreground="White"/>
                </StackPanel>

                <Rectangle HorizontalAlignment="Stretch" Height="1" Fill="White" />

                <TextBox x:Name="tbNavigation" Width="300" Margin="10" Text="{Binding NavigationText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextChanged="HandleNavigationTextboxTextChanged" />

                <ListBox x:Name="lbNavigation" Width="300" Height="200" Margin="10,0,10,10" ItemsSource="{Binding NavigationItems}"
                         SelectedItem="{Binding SelectedNavigationItem}" Focusable="False" MouseDoubleClick="HandleNavigationListMouseDoubleClick">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Name="SelectionBorder" Background="Transparent" CornerRadius="1">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Trigger.Setters>
                                                    <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                                                    <Setter TargetName="SelectionBorder" Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                                                </Trigger.Setters>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type nav:BaseNavigationModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Margin="4" Source="{Binding Icon}" Opacity="{Binding Enabled, Converter={StaticResource EnabledToOpactityConverter}}" />
                                <TextBlock x:Name="lNavItem" Text="{Binding Title}" Margin="4" Opacity="{Binding Enabled, Converter={StaticResource EnabledToOpactityConverter}}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </Popup>

    </Grid>
</f:RibbonWindow>
